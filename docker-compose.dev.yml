version: '3'
services:
  db:
    container_name: course-management-db-dev
    image: postgres:alpine
    restart: always
    expose:
      - '5432'
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DATABASE=cmdb
    volumes:
      - ./volumes/postgres-dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # migrations:
  #   container_name: course-management-migrations-dev
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.migrations
  #   image: course-management-migrations:dev
  #   volumes:
  #     - ./src/migrations/:/app/src/migrations
  #     - ./src/entities/:/app/src/entities
  #     - ./src/db/seeds:/app/src/db/seeds
  #   stdin_open: true
  #   tty: true
  #   env_file:
  #     - .env
  #   depends_on:
  #     db:
  #       condition: service_healthy


  backend:
    container_name: course-management-backend-dev
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: dev
    image: course-management-backend:dev
    volumes:
      - ./src:/app/src
      - ./src/static:/app/dist/src/static
    expose:
      - '3000'
    ports:
      - 3000:3000
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
